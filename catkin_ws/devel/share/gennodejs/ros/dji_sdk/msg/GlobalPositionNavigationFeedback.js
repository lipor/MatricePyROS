// Auto-generated. Do not edit!

// (in-package dji_sdk.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class GlobalPositionNavigationFeedback {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.latitude_progress = null;
      this.longitude_progress = null;
      this.altitude_progress = null;
    }
    else {
      if (initObj.hasOwnProperty('latitude_progress')) {
        this.latitude_progress = initObj.latitude_progress
      }
      else {
        this.latitude_progress = 0;
      }
      if (initObj.hasOwnProperty('longitude_progress')) {
        this.longitude_progress = initObj.longitude_progress
      }
      else {
        this.longitude_progress = 0;
      }
      if (initObj.hasOwnProperty('altitude_progress')) {
        this.altitude_progress = initObj.altitude_progress
      }
      else {
        this.altitude_progress = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type GlobalPositionNavigationFeedback
    // Serialize message field [latitude_progress]
    bufferOffset = _serializer.uint8(obj.latitude_progress, buffer, bufferOffset);
    // Serialize message field [longitude_progress]
    bufferOffset = _serializer.uint8(obj.longitude_progress, buffer, bufferOffset);
    // Serialize message field [altitude_progress]
    bufferOffset = _serializer.uint8(obj.altitude_progress, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type GlobalPositionNavigationFeedback
    let len;
    let data = new GlobalPositionNavigationFeedback(null);
    // Deserialize message field [latitude_progress]
    data.latitude_progress = _deserializer.uint8(buffer, bufferOffset);
    // Deserialize message field [longitude_progress]
    data.longitude_progress = _deserializer.uint8(buffer, bufferOffset);
    // Deserialize message field [altitude_progress]
    data.altitude_progress = _deserializer.uint8(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 3;
  }

  static datatype() {
    // Returns string type for a message object
    return 'dji_sdk/GlobalPositionNavigationFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '799b45a00bba65b59dcde12d51bf8bba';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #progress is in percent
    uint8 latitude_progress
    uint8 longitude_progress
    uint8 altitude_progress
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new GlobalPositionNavigationFeedback(null);
    if (msg.latitude_progress !== undefined) {
      resolved.latitude_progress = msg.latitude_progress;
    }
    else {
      resolved.latitude_progress = 0
    }

    if (msg.longitude_progress !== undefined) {
      resolved.longitude_progress = msg.longitude_progress;
    }
    else {
      resolved.longitude_progress = 0
    }

    if (msg.altitude_progress !== undefined) {
      resolved.altitude_progress = msg.altitude_progress;
    }
    else {
      resolved.altitude_progress = 0
    }

    return resolved;
    }
};

module.exports = GlobalPositionNavigationFeedback;
